name: Secure CI/CD

on:
  push:
    branches: [ release ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: taehun2/bbb:${{ github.ref_name }}
          build-args: |
            SPRING_PROFILES_ACTIVE=prod
            DATABASE_NAME=${{ secrets.DATABASE_NAME }}
            MONGODB_URI=${{ secrets.MONGODB_URI }}
            OAUTH_CLIENT_ID=${{ secrets.OAUTH_CLIENT_ID }}
            OAUTH_SECRET_KEY=${{ secrets.OAUTH_SECRET_KEY }}
            UNIV_API_KEY=${{ secrets.UNIV_API_KEY }}
            KAKAO_REST_API_KEY=${{ secrets.KAKAO_REST_API_KEY }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Prepare deployment data and signature
        id: prepare
        run: |
          # JSON 데이터를 환경 변수로 설정
          DEPLOY_JSON="{\"image\":\"taehun2/bbb:${{ github.ref_name }}\",\"env\":{\"SPRING_PROFILES_ACTIVE\":\"prod\",\"DATABASE_NAME\":\"${{ secrets.DATABASE_NAME }}\",\"MONGODB_URI\":\"${{ secrets.MONGODB_URI }}\",\"OAUTH_CLIENT_ID\":\"${{ secrets.OAUTH_CLIENT_ID }}\",\"OAUTH_SECRET_KEY\":\"${{ secrets.OAUTH_SECRET_KEY }}\",\"UNIV_API_KEY\":\"${{ secrets.UNIV_API_KEY }}\",\"KAKAO_REST_API_KEY\":\"${{ secrets.KAKAO_REST_API_KEY }}\",\"JWT_SECRET\":\"${{ secrets.JWT_SECRET }}\"}}"
          
          # JSON 데이터로부터 서명 생성
          SIGNATURE=$(echo -n "$DEPLOY_JSON" | openssl dgst -sha256 -hmac "${{ secrets.WEBHOOK_SECRET }}" | cut -d' ' -f2)
          
          # 결과를 GitHub Actions 환경 변수로 저장
          echo "deploy_json=$DEPLOY_JSON" >> $GITHUB_OUTPUT
          echo "signature=$SIGNATURE" >> $GITHUB_OUTPUT

      - name: Trigger deployment
        run: |
          # 허용된 POST 요청으로 푸시
          curl -X POST "${{ secrets.OFFICE_PC_WEBHOOK_URL }}/deploy" \
            -H "Content-Type: application/json" \
            -d '{
              "image": "taehun2/bbb:${{ github.ref_name }}",
              "env": {
                "SPRING_PROFILES_ACTIVE": "prod",
                "DATABASE_NAME": "${{ secrets.DATABASE_NAME}}",
                "MONGODB_URI": "${{ secrets.MONGODB_URI }}",
                "OAUTH_CLIENT_ID": "${{ secrets.OAUTH_CLIENT_ID }}",
                "OAUTH_SECRET_KEY": "${{ secrets.OAUTH_SECRET_KEY }}",
                "UNIV_API_KEY": "${{ secrets.UNIV_API_KEY }}",
                "KAKAO_REST_API_KEY": "${{ secrets.KAKAO_REST_API_KEY }}",
                "JWT_SECRET": "${{ secrets.JWT_SECRET }}"
              }
            }'